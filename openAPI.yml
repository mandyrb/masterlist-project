openapi: 3.0.0
info:
  title: Master List Project
  version: 1.0.0
paths:
  /user:
    post:
      tags:
        - Auth API
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: Username and password required
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: string
                example: Username already exists
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
  /login:
    post:
      tags:
        - Auth API
      summary: Get token for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: Username and password required
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example: Invalid username or password
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
  /:
    post:
      tags:
        - Lists API
      summary: Create a new list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MasterListRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: Body must contain fields 'name' and 'items'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: Request must come from an authenticated user
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
    get:
      tags:
        - Lists API
      summary: Get all lists belonging to the requesting user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MasterList"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: Request must come from an authenticated user
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
  /{id}:
    get:
      tags:
        - Lists API
      summary: Get a list
      parameters:
        - name: id
          in: path
          description: _id of the list to be retrieved
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: The id provided must be a string with 24 characters
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example: User {username} is not authorized to retrieve object with id {id}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: Request must come from an authenticated user
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: Object with id {id} not found
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
    patch:
      tags:
        - Lists API
      summary: Update a list
      parameters:
        - name: id
          in: path
          description: _id of the list to be retrieved
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: The id provided must be a string with 24 characters
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example: User {username} is not authorized to update object with id {id}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: Request must come from an authenticated user
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: Object with id {id} not found
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
    delete:
      tags:
        - Lists API
      summary: Delete a list
      parameters:
        - name: id
          in: path
          description: _id of the list to be retrieved
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: Deleted object with id {id}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: The id provided must be a string with 24 characters
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example: User {username} is not authorized to update object with id {id}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: Request must come from an authenticated user
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: Object with id {id} not found
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
  /story/{id}:
    get:
      tags:
        - Story API
      summary: Get a story about a list
      parameters:
        - name: id
          in: path
          description: _id of the list
          required: true
          schema:
            type: string
        - name: mood
          in: query
          description: mood of the desired story
          required: true
          schema:
            type: string
            enum: [happy, sad, scary]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example: You must provide a mood value to get a story from a list
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example: User {username} is not authorized to generate stories for list with id {id}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: Request must come from an authenticated user
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: Object with id {id} not found
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: Unexpected error
components:
  schemas:
    UserRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]
    MasterListRequest:
      type: object
      properties:
        name:
          type: string
        items:
          type: array
          items:
            type: string
    MasterList:
      type: object
      properties:
        name:
          type: string
        suggestions:
          type: string
        items:
          type: array
          items:
            type: string
        _id:
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      required: [name, items]
